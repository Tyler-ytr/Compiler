int fib(int n) //Note: recursive function
{

    if (n == 1 || n == 2) {
        return 1;
    } else {
        return fib(n - 1) + fib(n - 2);
    }
}

int main() {
    int n = 100;
    int ret = 0;
    ret = fib(n);
    return 0;
}


struct complex {
    int x;
    int y;
} cp;

int calculations() {
    int a;
    a = ((1 + 3) && 8 || (8 == 7) - (a = 4) / (9) * 5 + !0 - 8 < 1 + 9 > 0
                                                                         + fib(1 == 1) + cp.x + 1 >= 2 - 2 <= 1);
}

//HELL OF 'REDEFINITION'
int hell() {
    struct out {
        struct in {
            int same;
        } same;
    } same;

    {
        struct another {
            int same;
        } same;
        same.same = 1;
    }
    {
        struct yetanother {
            struct out same;
        } same;
        same.same.same.same = 1;
    }

    same.same.same = 1;
}

int initialization() {
    int a = 1;
    float f1 = 1.1;
    float f2 = 1.1 + 1.2 + 1.3;

    int b, c, d, e, f, g;
    int h = b = c = d = e = f = g = f = e = d = c = b = h;
    h = -!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!h;
}

//epsilon cases
struct {
    int a;
};
struct{

};
int noStmts(){
    int a;
}
int noDefs(){
    1;
}
int nothing(){
}





